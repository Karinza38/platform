<% layout("./layout") %>

<div x-data="page">
	<p>Click the button below to assign a DOI to the Pub.</p>
	<button @click="update" :aria-invalid="!!error" :class="{ loading }" aria-errormessage="error">Assign DOI</button>
	<p class="alert success" x-show="success" x-transition>Pub updated!</p>
	<div id="error" class="alert failure" x-show="error" x-transition>
		<strong x-text="error?.message"></strong>
		<p x-text="error?.cause"></p>
	</div>
	<table class="metadata" x-show="doi" x-transition>
		<thead>
			<tr>
				<th x-show="doi" x-transition>pubpub/doi</th>
			</tr>
		</thead>
		<tbody>
			<tr>
				<td x-show="doi" x-transition x-text="doi"></td>
			</tr>
		</tbody>
	</table>
</div>

<script>
  async function update() {
	  this.loading = true;
		this.success = false;
		this.error = undefined;
		const req = await fetch(`/apply?instanceId=<%= it.instanceId %>&pubId=<%= it.pubId %>`, {
			method: "POST",
		});
		this.loading = false;
		const res = await req.json();
		if (req.ok) {
			this.doi = res.doi;
			this.success = true;
		} else {
		  this.error = res ?? { message: "an unexpected error occurred" };
		}
	}

	function page() {
	  return {
			doi: "",
			error: undefined,
			loading: false,
			success: false,
			update,
		};
	}

	document.addEventListener("alpine:init", () => {
		Alpine.data("page", page);
	});
</script>
