<% layout("./layout") %>

<div x-data="page">
	<p>Enter your DataCite account ID, password, and DOI prefix.</p>
	<!-- Fields -->
	<fieldset class="input-group">
		<label class="input" for="account-id">
			<span>Account ID</span>
			<input id="account-id" type="input" x-model="accountId" />
		</label>
		<label class="input" for="password">
		  <span>Password</span>
			<input id="password" type="password" x-model="password" />
		</label>
		<label class="input" for="doi-prefix">
		  <span>DOI Prefix</span>
			<input id="doi-prefix" type="input" x-model="doiPrefix" />
		</label>
	</fieldset>
	<button class="button" @click="update" :disabled="!(accountId && password && doiPrefix)" :class="{ loading }">Configure Instance</button>
	<!-- Alerts -->
	<div class="alert success" x-show="success" x-cloak x-transition>
		<strong>Success!</strong>
		<p>Instance configured</p>
	</div>
	<div id="error" class="alert failure" x-show="error" x-cloak x-transition>
		<strong x-text="error?.message"></strong>
		<p x-text="error?.cause"></p>
	</div>
</div>

<script>
	document.addEventListener("alpine:init", () => {
		async function update() {
			this.error = false
			this.success = false
			this.loading = true
			const req = await fetch(`/configure?instanceId=<%= it.instanceId %>`, {
				method: "PUT",
				headers: { "Content-Type": "application/json" },
				body: JSON.stringify({
					accountId: this.accountId,
					password: this.password,
					doiPrefix: this.doiPrefix,
				}),
			})
			this.loading = false
			if (req.ok) {
				this.success = true
				return req.json()
			} else {
				this.error = await req.json()
			}
		}
		
		Alpine.data("page", () => ({
			accountId: "<%= it.instanceConfig.accountId %>",
			password: "<%= it.instanceConfig.password %>",
			doiPrefix: "<%= it.instanceConfig.doiPrefix %>",
			error: false,
			loading: false,
			success: false,
			update,
		}))
	})
</script>
